{"version":3,"sources":["App.js","index.js"],"names":["App","openwallet","load","loadblockchain","setInterval","setremove","useState","remove","account","setaccount","setloading","tran_loading","settran_loading","election","setelection","condidates1","setcondidates1","condidates2","setcondidates2","blockHash","cumulativeGasUsed","from","gasUsed","to","transactionHash","trans_detail_data","settrans_detail_data","a","window","ethereum","web3","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkId","networkData","electionbi","networks","contract","Contract","abi","address","methods","candidates","call","candidate1","candidate2","sub","i","vote","send","val","console","log","class","className","onClick","src","alt","srcset","voteCount","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89caa6f2.chunk.js","sourcesContent":["import React, {useState } from \"react\";\nimport electionbi from './contracts/Election.json'\n\nimport Web3 from \"web3\";\nimport './election.css'\n\nconst App = () => {\n  \n  const openwallet=()=> {\n      load()\n      loadblockchain()\n    }\n    setInterval(() => {\n      setremove(false)\n      \n    },5000);\n    \n    const[remove,setremove]=useState(true)\n      const[account,setaccount]=useState(' ')\n\n      const [loading, setloading] = useState(false);\n      const [tran_loading, settran_loading] = useState(false);\n      const[election,setelection]=useState()\n      const[condidates1,setcondidates1]=useState('')\n      const[condidates2,setcondidates2]=useState('')\n      const[trans_detail_data,settrans_detail_data]=useState({\n        blockHash:'',cumulativeGasUsed:'',from:' ',gasUsed:'',to :' ',\n        transactionHash:''\n      })\n\n      const load=async()=>{\n        \n        if(window.ethereum) {\n          window.web3 = new Web3(window.ethereum)\n          await window.ethereum.enable()\n          setloading(true)\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n      \n    }\n    else {\n      window.alert('non Ethereum browser detected. Dowload Metamask')\n    }\n  \n    }\n     const loadblockchain=async()=>{\n       \n      const web3 = window.web3\n      //load accounts\n      const accounts = await web3.eth.getAccounts()\n      setaccount(accounts)\n      openwallet()\n      //console.log(accounts)\n      //load contract\n      const networkId = await web3.eth.net.getId()\n      const networkData = electionbi.networks[networkId]\n      // console.log(\"netwrok\",networkData)\n      //  console.log(electionbi.abi)\n        if(networkData){\n          \nconst contract= new web3.eth.Contract(electionbi.abi,networkData.address);\nconst candidate1= await contract.methods.candidates(1).call()\n \n\n\n\n\n\nconst candidate2=await contract.methods.candidates(2).call()\n\n setcondidates1(candidate1)\n setcondidates2(candidate2)\n\nsetelection(contract)\n\nsetloading(false)\n\n          \n        }else{\n          window.alert(\"not deploy\");\n        }\n     } \n \n   const sub=async(i)=>{\n     try{\n\n       const val= await election.methods.vote(i).send({from:`${account}`})\n       console.log(\"val\",val.blockHash,val.cumulativeGasUsed,val.from,val.gasUsed,val.to ,val.transactionHash)\n       settrans_detail_data({...trans_detail_data,blockHash:val.blockHash,cumulativeGasUsed:val.cumulativeGasUsed,from:val.from,\n        gasUsed:val.gasUsed,to:val.to,transactionHash:val.transactionHash\n        \n      })\n      settran_loading(true)\n      openwallet()\n      alert('Successfully Voted')\n     }catch(e){alert('You have not Voted')}\n   }\nreturn(\n    <>\n<div class=\"container\">\n  { remove?<span className=\"coverbody\">\n    <h3> Welcome to Election-Dapp\n    Design By Prashantsrivastava@coder\n    </h3>\n    \n  </span>\n    \n    :null}\n \n   <div className=\"login\">\n     <h5 onClick={()=>openwallet()}>Login in Meta mask</h5>\n\n  <p>User Account:{account}</p>\n\n   </div>\n  <h1>Election of India</h1>\n <div className=\"candidate\">\n\n  \n  <div className=\"electioncss\">\n    <h1>BJP</h1>\n    <election className=\"card\">\n      <img src=\"bjp.png\" alt=\"\" srcset=\"\" />\n\n    </election>\n    \n    <h1>{condidates1.voteCount}</h1>\n    <h1>\n   {\n     account!=' '?<button onClick={()=>sub(condidates1.id)}>vote</button>:null\n   \n    } \n\n    </h1>\n  </div>\n  \n  <div className=\"electioncss\">\n    <h1>Congress</h1>\n    <election className=\"card\">\n      <img src=\"congress.png\" alt=\"\" srcset=\"\" />\n\n    </election>\n    \n      <h1>{condidates2.voteCount}</h1>\n    <h1>\n    {\n     account!=' '?<button onClick={()=>sub(condidates2.id)}>vote</button>:null\n   \n    }\n    </h1>\n  </div>\n  \n   </div>\n\n  {tran_loading?\n   <div className=\"transaction_container\">\n  <h1>Transaction Details</h1>\n  <div className=\"trans_detail\">\n      <div className=\"box\">\n      <label>  blockHash:</label>\n\n        <text>{trans_detail_data.blockHash}</text>\n      </div>\n      <div className=\"box\">\n      <label> cumulativeGasUsed:</label>\n       <text>{trans_detail_data.cumulativeGasUsed}</text>\n\n      </div>\n      <div className=\"box\">\n      <label>from:</label>\n       <text>{trans_detail_data.from}</text>\n      </div>\n      <div className=\"box\">\n      <label> gasUsed:</label>\n       <text>{trans_detail_data.gasUsed}</text>\n      </div>\n      <div className=\"box\">\n      <label> to:</label>\n     <text>{trans_detail_data.to}</text>\n      </div>\n       \n       <div className=\"box\">\n\n      \n       \n     <label>transactionHash:</label>    <text>{trans_detail_data.transactionHash}</text>\n        \n       </div>\n   </div>\n   \n   </div>\n   :null}\n   \n   \n   </div>\n       \n \n \n    </>\n  )\n \n\n      \n  \n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n/*import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();*/\n"],"sourceRoot":""}